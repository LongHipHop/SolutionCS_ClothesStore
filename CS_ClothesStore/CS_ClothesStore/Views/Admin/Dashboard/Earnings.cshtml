
@{
    ViewData["Title"] = "Earnings";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}


<!DOCTYPE html>
<html lang="en">
  <head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>Corona Admin</title>
    <!-- plugins:css -->
    <link rel="stylesheet" href="../../assets/vendors/mdi/css/materialdesignicons.min.css">
    <link rel="stylesheet" href="../../assets/vendors/css/vendor.bundle.base.css">
    <!-- endinject -->
    <!-- Plugin css for this page -->
    <!-- End Plugin css for this page -->
    <!-- inject:css -->
    <!-- endinject -->
    <!-- Layout styles -->
    <link rel="stylesheet" href="../../assets/css/style.css">
    <!-- End layout styles -->
    <link rel="shortcut icon" href="../../assets/images/favicon.png" />
  </head>
  <body>
    <!-- partial -->
    <div class="main-panel">
        <div class="content-wrapper">
            <div class="row mb-4">
                <div class="col-md-12">
                    <h3>Revenue statistics</h3>
                    <form id="revenueForm" class="form-inline">
                        <label class="mr-2">From date:</label>
                        <input type="date" id="startDate" class="form-control mr-3" required>
                        <label class="mr-2">To date:</label>
                        <input type="date" id="endDate" class="form-control mr-3" required>
                        <button type="submit" class="btn btn-primary">View</button>
                    </form>
                </div>
            </div>

            <div class="row mb-4">
                <div class="col-md-6">
                    <div class="card p-3">
                        <h5>All revenues</h5>
                        <h3 id="totalRevenue" class="text-success">0₫</h3>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="card p-3">
                        <h5>Transaction number</h5>
                        <h3 id="totalCount">0</h3>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-lg-12 grid-margin stretch-card">
                    <div class="card">
                        <div class="card-body">
                            <h4 class="card-title">Revenue Charts</h4>
                            <canvas id="areaRevenueChart" style="height:250px"></canvas>
                        </div>
                    </div>
                </div>
            </div>

        </div>
        <!-- content-wrapper ends -->
        <!-- partial:../../partials/_footer.html -->
        <footer class="footer">
            <div class="d-sm-flex justify-content-center justify-content-sm-between">
                <span class="text-muted d-block text-center text-sm-left d-sm-inline-block">Copyright © bootstrapdash.com 2020</span>
                <span class="float-none float-sm-right d-block mt-1 mt-sm-0 text-center"> Free <a href="https://www.bootstrapdash.com/bootstrap-admin-template/" target="_blank">Bootstrap admin templates</a> from Bootstrapdash.com</span>
            </div>
        </footer>
        <!-- partial -->
    </div>
    <!-- main-panel ends -->


    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        let areaRevenueChart;

        // Gọi API khi form submit
        document.getElementById('revenueForm').addEventListener('submit', async (e) => {
            e.preventDefault();

            const startDate = document.getElementById('startDate').value;
            const endDate = document.getElementById('endDate').value;

            if (!startDate || !endDate) {
                alert("Please select times range!");
                return;
            }

            const response = await fetch(`http://localhost:5013/api/Payment/revenue/range?startDate=${startDate}&endDate=${endDate}`);
            const data = await response.json();

            // Hiển thị tổng doanh thu và số giao dịch
            document.getElementById('totalRevenue').innerText = data.totalRevenue.toLocaleString('vi-VN') + "₫";
            document.getElementById('totalCount').innerText = data.paymentCount;

            // Nếu API trả thêm daily breakdown => vẽ chart
            if (data.dailyRevenues && data.dailyRevenues.length > 0) {
                const labels = data.dailyRevenues.map(x => x.date);
                const values = data.dailyRevenues.map(x => x.amount);

                if (areaRevenueChart) areaRevenueChart.destroy();

                const ctx = document.getElementById("areaRevenueChart").getContext("2d");

                // Tạo gradient (chuyển từ đậm → nhạt)
                const gradient = ctx.createLinearGradient(0, 0, 0, 400);
                gradient.addColorStop(0, "rgba(255, 99, 132, 0.5)");   // Màu trên (đậm)
                gradient.addColorStop(1, "rgba(255, 99, 132, 0.05)");  // Màu dưới (nhạt)

                areaRevenueChart = new Chart(ctx, {
                    type: "line",
                    data: {
                        labels: labels,
                        datasets: [{
                            label: "Doanh thu (₫)",
                            data: values,
                            fill: true,
                            backgroundColor: gradient,
                            borderColor: "rgba(255, 99, 132, 1)", // viền đậm
                            borderWidth: 2,
                            tension: 0.4,
                            pointBackgroundColor: "#fff",
                            pointBorderColor: "rgba(255, 99, 132, 1)",
                            pointHoverRadius: 6,
                            pointRadius: 4,
                        }]
                    },
                    options: {
                        responsive: true,
                        plugins: {
                            legend: {
                                labels: { color: "#fff" } // Nếu theme tối
                            }
                        },
                        scales: {
                            x: {
                                ticks: { color: "#ccc" },
                                grid: { color: "rgba(255,255,255,0.1)" }
                            },
                            y: {
                                beginAtZero: true,
                                ticks: {
                                    color: "#ccc",
                                    callback: function(value) {
                                        return value.toLocaleString('vi-VN') + '₫';
                                    }
                                },
                                grid: { color: "rgba(255,255,255,0.1)" }
                            }
                        }
                    }
                });

            }
        });
    </script>

      
    <!-- container-scroller -->
    <!-- plugins:js -->
    <script src="../../assets/vendors/js/vendor.bundle.base.js"></script>
    <!-- endinject -->
    <!-- Plugin js for this page -->
    <script src="../../assets/vendors/chart.js/Chart.min.js"></script>
    <!-- End plugin js for this page -->
    <!-- inject:js -->
    <script src="../../assets/js/off-canvas.js"></script>
    <script src="../../assets/js/hoverable-collapse.js"></script>
    <script src="../../assets/js/misc.js"></script>
    <script src="../../assets/js/settings.js"></script>
    <script src="../../assets/js/todolist.js"></script>
    <!-- endinject -->
    <!-- Custom js for this page -->
    <script src="../../assets/js/chart.js"></script>
    <!-- End custom js for this page -->
  </body>
</html>